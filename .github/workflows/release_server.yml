# This is a basic workflow to help you get started with Actions

name: Publish Server Release

on:
  release:
    types: [released]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Prepare build
        run: |
          sudo apt-get update
          sudo apt-get install -y zip curl jq

      # Runs a set of commands using the runners shell
      - name: Create OS files
        run: ./epic-server-answers | sudo ./create_epicPiOS 

      # Create Zip file
      - name: Create Package
        run: zip -j epicServer.zip  tmp/*.restore.img

      - name: Upload artifacts for later publishing
        uses: actions/upload-artifact@v2
        with:
          name: epicServer_${{ github.event.release.tag_name }}
          path: epicServer.zip
          
                
      - name: Upload to GDrive
          run: |
            # GET ACCESS TOKEN
            ACCESS_TOKEN=$(curl --request POST --data "\
            client_id=$CLIENT_ID&\
            client_secret=$CLIENT_SECRET&\
            refresh_token=$REFRESH_TOKEN&\
            grant_type=refresh_token" https://oauth2.googleapis.com/token | jq -r .access_token)
            # GET UPLOAD URL
            UPLOAD_URL=$(curl -X POST -i \
              --header "Authorization: Bearer  $ACCESS_TOKEN" \
              --header 'Content-Type: application/json' --header "Accept-Header: application/json" \
              --data '{"name":"epicServer_${{ github.event.release.tag_name }}.zip","mimeType":"application/gzip","driveId":"$DRIVE_ID","parents":["$DRIVE_ID"]}'
              "https://www.googleapis.com/upload/drive/v3/files?uploadType=resumable&supportsAllDrives=true" | grep -Fi location | tr -d '\r' | cut -d' ' -f2)
            # UPLOAD FILE
            curl -X PUT -i \
            -F "file=@epicServer.zip"  "$UPLOAD_URL"
          shell: bash
          env:
            DRIVE_ID: ${{vars.GDRIVE_ASSETS_DRIVE_ID}}
            REFRESH_TOKEN: ${{secrets.GDRIVE_API_REFRESH_TOKEN}}
            CLIENT_ID: ${{vars.GDRIVE_OAUTH_CLIENT_ID}}
            CLIENT_SECRET: ${{secrets.GDRIVE_OAUTH_CLIENT_SECRET}}
